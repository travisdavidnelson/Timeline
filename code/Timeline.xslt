<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:math="http://exslt.org/math"> 
<xsl:template match="/">

<!--
     Generated by Travis David Nelson on Mon Dec 08 21:26:32 MST 2014
-->
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <title>Timeline</title>
  <link type="text/css" rel="stylesheet" href="./RomeStyles.css"/>
</head>
<body>
<xsl:apply-templates select="timeline"/>
</body>
</html>

</xsl:template>

<xsl:template match="timeline">
	<?xml-stylesheet type="text/css" href="./RomeStyles.css" ?>	
    <svg x="0px" y="0px" width="15000px" height="1500px" viewBox="0 0 15000 1500" xml:space="preserve">

      <xsl:call-template name="displayGrid">
        <xsl:with-param name="timelineStartYear" select="-800"/>
        <xsl:with-param name="timelineEndYear" select="1500"/>
      </xsl:call-template>

	  <xsl:apply-templates select="backgroundEvents"/>

    </svg>
</xsl:template>

<xsl:template match="backgroundEvents">
   <xsl:variable name="startYear">
      <xsl:value-of select="dateRange/startYear"/>
   </xsl:variable>
   <xsl:variable name="startX">
     <xsl:call-template name="yearToX">
       <xsl:with-param name="year" select="$startYear"/>
     </xsl:call-template>
   </xsl:variable>
   <xsl:variable name="endYear">
      <xsl:value-of select="dateRange/endYear"/>
   </xsl:variable>
   <xsl:variable name="width">
      <xsl:call-template name="numberOfPixels">
	    <xsl:with-param name="years" select="($endYear - $startYear)"/>
	  </xsl:call-template>
   </xsl:variable>
   <xsl:variable name="height" select="1000 - 20" />
   <xsl:variable name="name">
      <xsl:value-of select="name"/>
   </xsl:variable>
   <xsl:variable name="style">
      <xsl:value-of select="style"/>
   </xsl:variable>

   <g><rect id="{$name" x="{$startX}" y="20" width="{$width}" height="{$height}" class="{$style}"/></g>
   <xsl:text>&#10;</xsl:text> <!-- newline character -->

</xsl:template>


<xsl:template name="displayGrid">
 <xsl:param name="timelineStartYear"/>
 <xsl:param name="timelineEndYear"/>

 <xsl:variable name="timelineStartX">
   <xsl:call-template name="yearToX">
       <xsl:with-param name="year" select="$timelineStartYear"/>
    </xsl:call-template>
 </xsl:variable>
 <xsl:variable name="timelineEndX">
   <xsl:call-template name="yearToX">
       <xsl:with-param name="year" select="$timelineEndYear"/>
    </xsl:call-template>
 </xsl:variable>
 <xsl:call-template name="line">
     <xsl:with-param name="x1" select="$timelineStartX"/>
     <xsl:with-param name="y1" select="20"/>
     <xsl:with-param name="x2" select="$timelineEndX"/>
     <xsl:with-param name="y2" select="20"/>
 </xsl:call-template>
 <xsl:call-template name="line">
     <xsl:with-param name="x1" select="$timelineStartX"/>
     <xsl:with-param name="y1" select="1000"/>
     <xsl:with-param name="x2" select="$timelineEndX"/>
     <xsl:with-param name="y2" select="1000"/>
 </xsl:call-template>
 <xsl:call-template name="processYear">
   <xsl:with-param name="timelineStartYear" select="$timelineStartYear"/>
   <xsl:with-param name="timelineEndYear" select="$timelineEndYear"/>
 </xsl:call-template>
</xsl:template>

<xsl:template name="processYear">
 <xsl:param name="timelineStartYear"/>
 <xsl:param name="timelineEndYear"/>

 <xsl:if test="not($timelineStartYear > $timelineEndYear)">
  <xsl:choose>
   <xsl:when test="$timelineStartYear = $timelineEndYear">
     <xsl:call-template name="gridline">
       <xsl:with-param name="year" select="$timelineStartYear"/>
     </xsl:call-template>
   </xsl:when>
   <xsl:otherwise>
     <xsl:variable name="vMid" select=
      "floor(($timelineStartYear + $timelineEndYear) div 2)"/>
     <xsl:call-template name="displayGrid">
      <xsl:with-param name="timelineStartYear" select="$timelineStartYear"/>
      <xsl:with-param name="timelineEndYear" select="$vMid"/>
     </xsl:call-template>
     <xsl:call-template name="processYear">
      <xsl:with-param name="timelineStartYear" select="$vMid+1"/>
      <xsl:with-param name="timelineEndYear" select="$timelineEndYear"/>
     </xsl:call-template>
   </xsl:otherwise>
  </xsl:choose>
 </xsl:if>
</xsl:template>

<xsl:template name="gridline">
    <xsl:param name="year"/>

    <xsl:if test="($year mod 100) = 0 or $year = 1">
        <xsl:variable name="xValue">
	      <xsl:call-template name="yearToX">
	          <xsl:with-param name="year" select="$year"/>
	       </xsl:call-template>
	    </xsl:variable>
        <xsl:call-template name="yearHeader">
          <xsl:with-param name="year" select="$year"/>
          <xsl:with-param name="xValue" select="$xValue"/>
        </xsl:call-template>
<!-- <xsl:comment>year is <xsl:value-of select='$year'/></xsl:comment> 
<xsl:comment>xValue is <xsl:value-of select='$xValue'/></xsl:comment>  -->
        <xsl:call-template name="line">
            <xsl:with-param name="x1" select="$xValue"/>
            <xsl:with-param name="y1" select="20"/>
            <xsl:with-param name="x2" select="$xValue"/>
            <xsl:with-param name="y2" select="1000"/>
        </xsl:call-template>
    </xsl:if>
    <xsl:if test="($year mod 10) = 0">
        <xsl:variable name="xValue">
	      <xsl:call-template name="yearToX">
	          <xsl:with-param name="year" select="$year"/>
	       </xsl:call-template>
	    </xsl:variable>
        <xsl:call-template name="line">
            <xsl:with-param name="x1" select="$xValue"/>
            <xsl:with-param name="y1" select="20"/>
            <xsl:with-param name="x2" select="$xValue"/>
            <xsl:with-param name="y2" select="30"/>
        </xsl:call-template>
        <xsl:call-template name="line">
            <xsl:with-param name="x1" select="$xValue"/>
            <xsl:with-param name="y1" select="990"/>
            <xsl:with-param name="x2" select="$xValue"/>
            <xsl:with-param name="y2" select="1000"/>
        </xsl:call-template>
    </xsl:if>
    <xsl:if test="($year mod 50) = 0">
        <xsl:variable name="xValue">
	      <xsl:call-template name="yearToX">
	          <xsl:with-param name="year" select="$year"/>
	       </xsl:call-template>
	    </xsl:variable>
        <xsl:call-template name="line">
            <xsl:with-param name="x1" select="$xValue"/>
            <xsl:with-param name="y1" select="20"/>
            <xsl:with-param name="x2" select="$xValue"/>
            <xsl:with-param name="y2" select="40"/>
        </xsl:call-template>
        <xsl:call-template name="line">
            <xsl:with-param name="x1" select="$xValue"/>
            <xsl:with-param name="y1" select="980"/>
            <xsl:with-param name="x2" select="$xValue"/>
            <xsl:with-param name="y2" select="1000"/>
        </xsl:call-template>
    </xsl:if>

</xsl:template>


<xsl:template name="line">
    <xsl:param name="x1"/>
    <xsl:param name="y1"/>
    <xsl:param name="x2"/>
    <xsl:param name="y2"/>
    <xsl:param name="class" select="'timeline'"/>

	<line x1="{$x1}" y1="{$y1}" x2="{$x2}" y2="{$y2}" class="{$class}"/>
	<xsl:text>&#10;</xsl:text> <!-- newline character -->

</xsl:template>

<xsl:template name="yearToX">
  <xsl:param name="year"/>
  <xsl:param name="timelineStartYear" select="-800"/>
  <xsl:param name="timelineEndYear" select="1500"/>
  <xsl:variable name="pixelsPerYear">
    <xsl:call-template name="numberOfPixels">
	  <xsl:with-param name="years" select="1"/>
    </xsl:call-template>
  </xsl:variable>
  <xsl:choose>
    <xsl:when test="$year > 0">
     <xsl:value-of select="(($pixelsPerYear)*($year)-($pixelsPerYear)-(($pixelsPerYear)*($timelineStartYear))) + 20" />
    </xsl:when>
    <xsl:otherwise>
     <xsl:value-of select="(($pixelsPerYear)*($year)-(($pixelsPerYear)*($timelineStartYear))) + 20" />
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<xsl:template name="numberOfPixels">
  <xsl:param name="years"/>
  <xsl:param name="pixelsPerYear" select="5"/>
  <xsl:value-of select="$pixelsPerYear * $years" />
</xsl:template>

<xsl:template name="yearHeader">
  <xsl:param name="year"/>
  <xsl:param name="xValue"/>
  <xsl:choose>
    <xsl:when test="$year = 1">
	    <text x="{$xValue}" y="13" class="year">AD <xsl:value-of select="$year" /></text>
    </xsl:when>
    <xsl:when test="$year > 0">
	    <text x="{$xValue}" y="13" class="year"><xsl:value-of select="$year" /></text>
    </xsl:when>
    <xsl:when test="$year &lt; 0">
	    <text x="{$xValue}" y="13" class="year"><xsl:value-of select="math:abs($year)" /> BC</text>
    </xsl:when>
  </xsl:choose>
</xsl:template>

</xsl:stylesheet>